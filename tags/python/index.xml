<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on Jens Blawatt</title><link>https://blog.j3nk0.de/tags/python/</link><description>Recent content in python on Jens Blawatt</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 07 Mar 2014 18:22:56 +0100</lastBuildDate><atom:link href="https://blog.j3nk0.de/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Python Logging Decorator</title><link>https://blog.j3nk0.de/posts/python-logging-decorator/</link><pubDate>Fri, 07 Mar 2014 18:22:56 +0100</pubDate><guid>https://blog.j3nk0.de/posts/python-logging-decorator/</guid><description>Hin und wieder ist es notwendig, die Parameter und die Rückgabewerte einer Funktion zu überprüfen. In Python kann man hierfür das logging Paket und den später folgenden Decorator für die Funktionen verwenden.
Zuvor müssen wir aber erstmal dafür sorgen, dass die Informationen irgendwo ausgegeben werden. In diesem Fall auf der Konsole.
import logging # Einen Logger mit dem Namen foo.bar erstellen. logger = logging.getLogger(&amp;#39;foo.bar&amp;#39;) # Den Log-Level DEBUG setzten. logger.setLevel(logging.DEBUG) # Festlegen, dass die Meldungen auf der Konsole ausgegeben werden sollen.</description></item><item><title>Python Namespaces</title><link>https://blog.j3nk0.de/posts/python-namespaces/</link><pubDate>Sat, 12 Jan 2013 00:00:00 +0000</pubDate><guid>https://blog.j3nk0.de/posts/python-namespaces/</guid><description>In Programmiersprachen wie Java oder C# ist es möglich, Namespaces zu nutzen um sein Programm zu struckturieren. In Python nutzt man hierfür Packages. Auf den ersten Blick gibt es jedoch in Python keine Möglichkeit die einzelnen Packete in mehrere Eggs aufzuteilen und damit aussehen zu lassen als wären Sie eins. Dies dient meines Erachtens auch der Übersichtlichtkeit des Programms/Frameworks.
Da ich aus der C#/VB.NET Ecke komme, habe ich ich dieses Feature ein wenig vermisst.</description></item></channel></rss>